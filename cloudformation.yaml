Parameters:
  GitHubUser:
    Description: 'Github username'
    Type: String
    Default: sila0
  GitHubRepo:
    Description: 'Github Repo name'
    Type: String
    Default: retail_stock_counting
  GitHubBranch:
    Description: 'Github Branch name'
    Type: String
    Default: master
  GitHubToken:
    Description: 'Github token'
    Default: f59273f30fb277c8b9c7b2c37f0f9f69021ceb3a
    NoEcho: true
    Type: String
  BuildType:
    Type: String
    Default: "LINUX_CONTAINER"
    Description: The build container type to use for building the app
  BuildComputeType:
    Type: String
    Default: "BUILD_GENERAL1_SMALL"
    Description: The build compute type to use for building the app
  BuildImage:
    Type: String
    Default: "aws/codebuild/amazonlinux2-x86_64-standard:2.0"
    Description: The build image to use for building the app

Resources: 
  AsmBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: pipeline-artifacts.sila
  PipelineBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: lambda-zip.sila
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: codebuild-service
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: "*"
                Resource: "*"
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: codepipeline-service
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - codebuild:*
                Resource: "*"
                Effect: Allow
              - Action:
                - s3:GetObject
                - s3:GetObjectVersion
                - s3:GetBucketVersioning
                Resource: "*"
                Effect: Allow
              - Action:
                - s3:PutObject
                Resource:
                - arn:aws:s3:::codepipeline*
                Effect: Allow
              - Action:
                - s3:*
                - cloudformation:*
                - iam:PassRole
                Resource: "*"
                Effect: Allow
  CloudFormationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: cfn-lambda-pipeline
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - apigateway:*
                - codedeploy:*
                - lambda:*
                - cloudformation:CreateChangeSet
                - iam:GetRole
                - iam:CreateRole
                - iam:DeleteRole
                - iam:PutRolePolicy
                - iam:AttachRolePolicy
                - iam:DeleteRolePolicy
                - iam:DetachRolePolicy
                - iam:PassRole
                - s3:GetObject
                - s3:GetObjectVersion
                - s3:GetBucketVersioning
                Resource: "*"
                Effect: Allow

  CodeBuildDeploySite:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${AWS::StackName}-build
      Description: Deploy site to S3
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
      Environment:
        Type: !Ref BuildType
        ComputeType: !Ref BuildComputeType
        Image: !Ref BuildImage
      TimeoutInMinutes: 10

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
        - 
          Name: Sources
          Actions:
            - 
              Name: stock-services
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: '1'
              RunOrder: 2
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubToken 
              InputArtifacts: []
              OutputArtifacts: 
                - Name: stock-services

        - 
          Name: Build
          Actions:
            - 
              Name: Artifact
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              RunOrder: 1
              Configuration:
                ProjectName: !Sub ${AWS::StackName}-build
              InputArtifacts:
                - Name: stock-services
              OutputArtifacts: 
                - Name: BuildOutput
        -
          Name: Deploy
          Actions:
            - 
              Name: Artifact
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND
                RoleArn: !GetAtt CloudFormationRole.Arn
                StackName: !Sub ${AWS::StackName}-deploy
                TemplatePath: BuildOutput::outputtemplate.yaml
              InputArtifacts:
                - Name: BuildOutput
              OutputArtifacts: []
      ArtifactStore:
        Type: S3
        Location: !Ref AsmBucket